<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qichong.dao.AppintmentTimeDao">


	<!-- 查询所有【预约时间】并且筛选 -->
	<select id="selectAllByFilter" resultType="AppintmentTime" parameterType="com.qichong.model.Filters">
		SELECT
			time.id,
			time.user_id as 'user.id',
			time.start_time,
			time.end_time,
			time.selected_time,
			state.id as 'state.id',
			state.state as 'state.state'
		FROM appintment_time AS time
		INNER JOIN state ON (state.id = time.state_id)
		<where>
			<if test="id!=null" >AND time.id = #{id}</if>
			<if test="userId!=null" >AND time.user_id = #{userId}</if>
			<if test="stateId!=null" >AND time.state_id = #{stateId}</if>
			<if test="beginTime!=null&amp;&amp;endTime!=null">AND (time.start_time BETWEEN #{beginTime} AND #{endTime})</if>
			<if test="beginTime!=null&amp;&amp;endTime==null">AND time.end_time > #{beginTime}</if>
		</where>
	</select>

	<!--插入一条预约时间 -->
	<insert id="insertOne" parameterType="AppintmentTime">
		INSERT INTO appintment_time (
			user_id,
			start_time,
			end_time,
			date_issued,
			state_id
		) VALUES (
			#{user.id},
			#{startTime},
			#{endTime},
			#{dateIssued},
			#{state.id}
		)
	</insert>
	
	<!-- 插入多条预约时间 -->
	<insert id="insertList" parameterType="AppintmentTime">
		INSERT INTO appintment_time (
			user_id,
			start_time,
			end_time,
			date_issued,
			state_id
		) VALUES
		<trim suffixOverrides=",">
			<foreach collection="times" item="item">
				(
					#{item.user.id},
					#{item.startTime},
					#{item.endTime},
					#{item.dateIssued},
					#{item.state.id}
				),
			</foreach>
		</trim>
	</insert>
	
	<!-- 删除一个预约时间 -->
	<delete id="deleteOne">
		DELETE FROM appintment_time
		<where>
			id = #{id}
			<if test="userId != null">AND user_id = #{userId}</if>
		</where>
	</delete>
	
	<!-- 修改一个预约时间 -->
	<update id="updateOne" parameterType="AppintmentTime">
		UPDATE appintment_time
		<set>
			<if test="startTime!=null">start_time = #{startTime},</if>
			<if test="endTime!=null">end_time = #{endTime},</if>
			<if test="selectedTime!=null">selected_time = #{selectedTime},</if>
			<if test="state!=null&amp;&amp;state.id!=null">state_id = #{state.id},</if>
		</set>
		<where>
			 id = #{id}
			 <if test="userId != null">AND user_id = #{userId}</if>
		</where>
	</update>

	<!-- 根据用户id和选择的开始日期和结束日期查询 -->
	<select id="selAppintmentByTime" resultType="AppintmentTime">
		SELECT * FROM appintment_time a 
		WHERE user_id = #{userId}
		AND start_time LIKE '${startTime}%' 
		AND end_time LIKE '${endTime}%'
	</select>

	<!-- updateSelectedTime -->
	<update id="updateSelectedTime" parameterType="AppintmentTime">
		UPDATE appintment_time
		<set>
			selected_time = #{selectedTime},
			<if test="state != null &amp;&amp; state.id == 3">state_id = #{state.id},</if>
		</set>
		WHERE id = #{id}
	</update>

	<!-- 修改状态 -->
	<update id="update-state" parameterType="AppintmentTime">
		UPDATE appintment_time
		SET state_id = 3 WHERE id = #{id}
	</update>
	
	<select id="selectListByUserId" resultType="AppintmentTime">
		SELECT
			id,
			user_id,
			start_time,
			end_time,
			selected_time,
			state_id as 'state.id'
		FROM appintment_time
		WHERE user_id = #{user.id}
		<!-- AND state_id = 2 -->
	</select>

	<!--查询个人的预约时间 -->
	<select id="queryUserTime" resultType="AppintmentTime">
		SELECT * FROM
		appintment_time a
		INNER JOIN user_info u ON a.user_id = u.user_id
		INNER
		JOIN state s ON a.state_id=s.id
		WHERE a.user_id=#{userId} AND s.id=2
	</select>
	
	<!-- 修改预约时间 -->
	<update id="updateAppintmentTime" parameterType="AppintmentTime">
		UPDATE
		appintment_time
		SET
		user_id = #{appintmentTime.user.id},
		start_time = #{appintmentTime.startTime},
		end_time = #{appintmentTime.endTime},
		date_issued = #{appintmentTime.dateIssued},
		state_id = #{appintmentTime.state.id}
		WHERE (id = #{appintmentTime.id})
	</update>
	
	<update id="updateATime" parameterType="AppintmentTime">
		UPDATE appintment_time
		SET
		start_time = #{startTime},
		end_time = #{endTime},
		date_issued = #{dateIssued}
		WHERE (id = #{id})
	</update>

</mapper>
